{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/searchbar/Searchbar.js","components/loader/button/Button.js","components/loader/Loader.js","components/modal/Modal.js","components/App.js","index.js"],"names":["ImageGalleryItem","images","taggleModal","map","image","className","onClick","largeImageURL","src","webformatURL","alt","tags","id","uuidv4","ImageGallery","Searchbar","state","searchWord","saveInputValueToState","evt","setState","target","name","value","handleSubmitForm","preventDefault","props","changeSearchWord","onSubmit","this","type","onChange","autocomplete","autofocus","placeholder","Component","Button","showMore","Loader","loading","currentPage","color","height","width","timeout","Modal","handleEsc","e","code","window","addEventListener","document","querySelector","style","overflow","removeEventListener","App","shawModal","handleSearchProducts","a","axios","get","data","prevState","hits","console","log","scrollTo","top","documentElement","scrollHeight","behavior","word","bigImage","prevProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57cda2aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ImageGalleryItem = ({ images, taggleModal }) => {\r\n return (\r\n  <>\r\n   {images.map((image) => (\r\n    <li className=\"ImageGalleryItem\" key={uuidv4()}>\r\n     <img\r\n      onClick={() => taggleModal(image.largeImageURL)}\r\n      src={image.webformatURL}\r\n      alt={image.tags}\r\n      className=\"ImageGalleryItem-image\"\r\n      id={image.id}\r\n     />\r\n    </li>\r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ images, taggleModal }) => {\r\n return (\r\n  <>\r\n   <ul className=\"ImageGallery\">\r\n    <ImageGalleryItem images={images} taggleModal={taggleModal} />\r\n   </ul>\r\n  </>\r\n );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n images: PropTypes.arrayOf(PropTypes.shape({\r\n     webformatURL: PropTypes.string.isRequired,\r\n     tags: PropTypes.string.isRequired,\r\n     id: PropTypes.number.isRequired,\r\n })),\r\n taggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n static propTypes = {\r\n  changeSearchWord: PropTypes.func.isRequired,\r\n };\r\n\r\n state = {\r\n  searchWord: \"\",\r\n };\r\n\r\n saveInputValueToState = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n  this.props.changeSearchWord(this.state.searchWord);\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <header className=\"Searchbar\">\r\n     <form className=\"SearchForm\" onSubmit={this.handleSubmitForm}>\r\n      <button type=\"submit\" className=\"SearchForm-button\">\r\n       <span className=\"SearchForm-button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       className=\"SearchForm-input\"\r\n       type=\"text\"\r\n       name=\"searchWord\"\r\n       autocomplete=\"off\"\r\n       autofocus\r\n       placeholder=\"Search images and photos\"\r\n      />\r\n     </form>\r\n    </header>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\n\r\nconst Button = ({ showMore }) => {\r\n return (\r\n  <button className=\"Button\" onClick={() => showMore()}>\r\n   Show More\r\n  </button>\r\n );\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Load from \"react-loader-spinner\";\r\nimport Button from \"./button/Button\";\r\n\r\nconst Loader = ({ loading, showMore, currentPage }) => {\r\n return (\r\n  <>\r\n   {currentPage ? (\r\n    loading ? (\r\n     <div className=\"loader\">\r\n      <Load\r\n       type=\"Circles\"\r\n       color=\"#05a8df\"\r\n       height={100}\r\n       width={100}\r\n       timeout={1000}\r\n      />\r\n     </div>\r\n    ) : (\r\n     <Button showMore={showMore} />\r\n    )\r\n   ) : null}\r\n  </>\r\n );\r\n};\r\n\r\nLoader.propTypes = {\r\n loading: PropTypes.bool.isRequired,\r\n showMore: PropTypes.func.isRequired,\r\n currentPage: PropTypes.number,\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n static propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  taggleModal: PropTypes.func.isRequired,\r\n };\r\n \r\n componentDidMount() {\r\n  window.addEventListener(\"keydown\", this.handleEsc);\r\n  const body = document.querySelector(\"body\");\r\n  body.style.overflow = \"hidden\";\r\n }\r\n componentWillUnmount() {\r\n  window.removeEventListener(\"keydown\", this.handleEsc);\r\n  const body = document.querySelector(\"body\");\r\n  body.style.overflow = \"auto\";\r\n }\r\n\r\n handleEsc = (e) => {\r\n  if (e.code === \"Escape\") {\r\n   this.props.taggleModal('');\r\n  }\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    <div className=\"Overlay\" onClick={() => this.props.taggleModal('')}>\r\n     <div className=\"Modal\">\r\n      <img src={this.props.largeImageURL} alt=\"pic\" />\r\n     </div>\r\n    </div>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport Loader from \"./loader/Loader\";\r\nimport Modal from \"./modal/Modal\";\r\n\r\nclass App extends Component {\r\n state = {\r\n  images: [],\r\n  searchWord: \"\",\r\n  currentPage: 0,\r\n  loading: false,\r\n  largeImageURL: \"\",\r\n  shawModal: false,\r\n };\r\n\r\n componentDidUpdate(prevProps, prevState) {\r\n  if (\r\n   prevState.searchWord !== this.state.searchWord ||\r\n   prevState.currentPage !== this.state.currentPage\r\n  ) {\r\n   this.handleSearchProducts();\r\n  }\r\n }\r\n\r\n handleSearchProducts = async () => {\r\n  const KEY_API = \"21698474-fb36d7b3400c91ab3d227d6db\";\r\n  const BASE_URL = \"https://pixabay.com/api/\";\r\n\r\n  this.setState({ loading: true });\r\n\r\n  try {\r\n   const { data } = await axios.get(\r\n    `${BASE_URL}?q=${this.state.searchWord}&page=${this.state.currentPage}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\r\n   );\r\n   this.setState((prevState) => ({\r\n    images: [...prevState.images, ...data.hits],\r\n    loading: true,\r\n   }));\r\n  } \r\n  catch (error) {\r\n   console.log(error);\r\n  } \r\n  finally {\r\n   this.setState({ loading: false });\r\n\r\n   window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n   });\r\n  }\r\n };\r\n\r\n changeSearchWord = (word) => {\r\n  this.setState({ searchWord: word, images: [], currentPage: 1 });\r\n };\r\n\r\n showMore = () => {\r\n  this.setState((prevState) => ({ currentPage: prevState.currentPage + 1 }));\r\n };\r\n\r\n taggleModal = (bigImage) => {\r\n  this.setState({ largeImageURL: bigImage });\r\n };\r\n\r\n render() {\r\n  \r\n  return (\r\n   <>\r\n    <Searchbar changeSearchWord={this.changeSearchWord} />\r\n    <ImageGallery images={this.state.images} taggleModal={this.taggleModal} />\r\n    <Loader\r\n     loading={this.state.loading}\r\n     showMore={this.showMore}\r\n     currentPage={this.state.currentPage}\r\n    />\r\n    {this.state.largeImageURL && (\r\n     <Modal\r\n      largeImageURL={this.state.largeImageURL}\r\n      taggleModal={this.taggleModal}\r\n     />\r\n    )}\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}