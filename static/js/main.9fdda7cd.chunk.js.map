{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/searchbar/Searchbar.js","components/loader/button/Button.js","components/loader/Loader.js","components/modal/Modal.js","components/App.js","index.js"],"names":["ImageGalleryItem","images","taggleModal","map","image","className","onClick","largeImageURL","src","webformatURL","alt","tags","id","uuidv4","ImageGallery","Searchbar","changeSearchWord","useState","state","setState","onSubmit","evt","preventDefault","searchWord","type","onChange","target","name","value","autocomplete","autofocus","placeholder","Button","showMore","Loader","loading","currentPage","color","height","width","timeout","Modal","useEffect","window","addEventListener","handleEsc","document","querySelector","style","overflow","removeEventListener","e","code","KEY_API","BASE_URL","App","setImages","setSearchWord","setCurrentPage","setLoading","setLargeImageURL","setError","handleSearchProducts","a","axios","get","data","hits","prev","scrollTo","top","documentElement","scrollHeight","behavior","bigImage","word","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9fdda7cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ImageGalleryItem = ({ images, taggleModal }) => {\r\n return (\r\n  <>\r\n   {images.map((image) => (\r\n    <li className=\"ImageGalleryItem\" key={uuidv4()}>\r\n     <img\r\n      onClick={() => taggleModal(image.largeImageURL)}\r\n      src={image.webformatURL}\r\n      alt={image.tags}\r\n      className=\"ImageGalleryItem-image\"\r\n      id={image.id}\r\n     />\r\n    </li>\r\n   ))}\r\n  </>\r\n );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ images, taggleModal }) => {\r\n return (\r\n  <>\r\n   <ul className=\"ImageGallery\">\r\n    <ImageGalleryItem images={images} taggleModal={taggleModal} />\r\n   </ul>\r\n  </>\r\n );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n images: PropTypes.arrayOf(PropTypes.shape({\r\n     webformatURL: PropTypes.string.isRequired,\r\n     tags: PropTypes.string.isRequired,\r\n     id: PropTypes.number.isRequired,\r\n })),\r\n taggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ changeSearchWord }) => {\r\n const [state, setState] = useState('');\r\n\r\n const saveInputValueToState = (evt) => {\r\n  setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n const handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n  changeSearchWord(state.searchWord);\r\n };\r\n return (\r\n  <>\r\n   <header className=\"Searchbar\">\r\n    <form className=\"SearchForm\" onSubmit={handleSubmitForm}>\r\n     <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n     </button>\r\n\r\n     <input\r\n      onChange={saveInputValueToState}\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      name=\"searchWord\"\r\n      autocomplete=\"off\"\r\n      autofocus\r\n      placeholder=\"Search images and photos\"\r\n     />\r\n    </form>\r\n   </header>\r\n  </>\r\n );\r\n};\r\nSearchbar.propTypes = {\r\n changeSearchWord: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst Button = ({ showMore }) => {\r\n return (\r\n  <button className=\"Button\" onClick={() => showMore()}>\r\n   Show More\r\n  </button>\r\n );\r\n};\r\n\r\nexport default Button;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Load from \"react-loader-spinner\";\r\nimport Button from \"./button/Button\";\r\n\r\nconst Loader = ({ loading, showMore, currentPage }) => {\r\n return (\r\n  <>\r\n   {currentPage >1 ? (\r\n    loading ? (\r\n     <div className=\"loader\">\r\n      <Load\r\n       type=\"Circles\"\r\n       color=\"#05a8df\"\r\n       height={100}\r\n       width={100}\r\n       timeout={1000}\r\n      />\r\n     </div>\r\n    ) : (\r\n     <Button showMore={showMore} />\r\n    )\r\n   ) : null}\r\n  </>\r\n );\r\n};\r\n\r\nLoader.propTypes = {\r\n loading: PropTypes.bool.isRequired,\r\n showMore: PropTypes.func.isRequired,\r\n currentPage: PropTypes.number,\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst Modal = ({ largeImageURL, taggleModal }) => {\r\n useEffect(() => {\r\n  window.addEventListener(\"keydown\", handleEsc);\r\n  const body = document.querySelector(\"body\");\r\n  body.style.overflow = \"hidden\";\r\n\r\n  return () => {\r\n   window.removeEventListener(\"keydown\", handleEsc);\r\n   const body = document.querySelector(\"body\");\r\n   body.style.overflow = \"auto\";\r\n  };\r\n });\r\n\r\n const handleEsc = (e) => {\r\n  if (e.code === \"Escape\") {\r\n   taggleModal(\"\");\r\n  }\r\n };\r\n return (\r\n  <>\r\n   <div className=\"Overlay\" onClick={() => taggleModal(\"\")}>\r\n    <div className=\"Modal\">\r\n     <img src={largeImageURL} alt=\"pic\" />\r\n    </div>\r\n   </div>\r\n  </>\r\n );\r\n};\r\n\r\nModal.propTypes = {\r\n largeImageURL: PropTypes.string.isRequired,\r\n taggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport Loader from \"./loader/Loader\";\r\nimport Modal from \"./modal/Modal\";\r\n\r\n\r\nconst KEY_API = \"21698474-fb36d7b3400c91ab3d227d6db\";\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\n\r\nconst App = () => {\r\n \r\n const [images, setImages] = useState([]);\r\n const [searchWord, setSearchWord] = useState(\"\");\r\n const [currentPage, setCurrentPage] = useState(1);\r\n const [loading, setLoading] = useState(false);\r\n const [largeImageURL, setLargeImageURL] = useState(\"\");\r\n const [err, setError] = useState(\"\");\r\n\r\n const handleSearchProducts = async (searchWord, currentPage = 1) => {\r\n  setLoading(true);\r\n\r\n  try {\r\n   const { data } = await axios.get(\r\n    `${BASE_URL}?q=${searchWord}&page=${currentPage}&key=${KEY_API}&image_type=photo&orientation=horizontal&per_page=12`\r\n   );\r\ncurrentPage === 1\r\n ? setImages(data.hits)\r\n : setImages((prev) => [...prev, ...data.hits]);\r\n   \r\n   setSearchWord(searchWord);\r\n   setCurrentPage((prev) => prev + 1);\r\n  } catch (error) {\r\n   setError(error);\r\n  } finally {\r\n   setLoading(false);\r\n\r\n   window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n   });\r\n  }\r\n };\r\n\r\n const changeSearchWord = (word) => {\r\n  handleSearchProducts(word);\r\n  setSearchWord(searchWord);\r\n };\r\n\r\n const showMore = async () => {\r\n  handleSearchProducts(searchWord, currentPage);\r\n\r\n };\r\n\r\n const taggleModal = (bigImage) => {\r\n  setLargeImageURL(bigImage);\r\n };\r\n return (\r\n  <>\r\n   <Searchbar changeSearchWord={changeSearchWord} />\r\n   <ImageGallery images={images} taggleModal={taggleModal} />\r\n   <Loader loading={loading} showMore={showMore} currentPage={currentPage} />\r\n   {largeImageURL && (\r\n    <Modal largeImageURL={largeImageURL} taggleModal={taggleModal} />\r\n   )}\r\n  </>\r\n );\r\n};\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}